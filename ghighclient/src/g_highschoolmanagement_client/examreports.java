
/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * student.java
 *
 * Created on Jun 9, 2013, 1:38:14 PM
 */
package g_highschoolmanagement_client;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.HashMap;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.util.JRLoader;
import net.sf.jasperreports.swing.JRViewer;

/**
 *
 * @author griffin
 */
public class examreports extends javax.swing.JInternalFrame {
    /** Creates new form student */
   

    public examreports() {
        dblogincred();
        initComponents();
        try {
    for (UIManager.LookAndFeelInfo info : UIManager.getInstalledLookAndFeels()) {
        if ("Nimbus".equals(info.getName())) {
            UIManager.setLookAndFeel(info.getClassName());
            break;
        }
    }
} catch (Exception e) {
    // If Nimbus is not available, you can set the GUI to another look and feel.
}
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lbldetails = new javax.swing.JLabel();
        pnlmain = new javax.swing.JPanel();
        pnlprsnldetails = new javax.swing.JPanel();
        lblfullname = new javax.swing.JLabel();
        lblogender = new javax.swing.JLabel();
        lblphone = new javax.swing.JLabel();
        txtclass1 = new javax.swing.JComboBox();
        txtstream1 = new javax.swing.JComboBox();
        pnlotherdetails = new javax.swing.JPanel();
        lblhome = new javax.swing.JLabel();
        lblemail = new javax.swing.JLabel();
        lblhome1 = new javax.swing.JLabel();
        txtterm1 = new javax.swing.JComboBox();
        txtetype1 = new javax.swing.JComboBox();
        txtsearch = new javax.swing.JTextField();
        tbpreports = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        btnmarksheetp = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        lblemail1 = new javax.swing.JLabel();
        txtadmno = new javax.swing.JTextField();
        btnpreview = new javax.swing.JButton();
        btnmarksheetp1 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        btnpreviewanalysis = new javax.swing.JButton();
        btnsearch = new javax.swing.JButton();

        setClosable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Examination Reports");

        lbldetails.setBackground(new java.awt.Color(153, 255, 153));
        lbldetails.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        lbldetails.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbldetails.setText("Examination Reports Preview Form");
        lbldetails.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        lbldetails.setName(""); // NOI18N
        lbldetails.setOpaque(true);

        pnlmain.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        pnlprsnldetails.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        lblfullname.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        lblfullname.setText(" Class");

        lblogender.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        lblogender.setText("Stream");

        lblphone.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        lblphone.setText("Year");

        txtclass1.setBackground(new java.awt.Color(255, 255, 204));
        txtclass1.setEditable(true);
        txtclass1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { " ", "1", "2", "3", "4", " " }));
        txtclass1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtclass1ActionPerformed(evt);
            }
        });

        txtstream1.setBackground(new java.awt.Color(255, 255, 204));
        txtstream1.setEditable(true);
        txtstream1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { " ", "North", "South", "East", "West" }));

        org.jdesktop.layout.GroupLayout pnlprsnldetailsLayout = new org.jdesktop.layout.GroupLayout(pnlprsnldetails);
        pnlprsnldetails.setLayout(pnlprsnldetailsLayout);
        pnlprsnldetailsLayout.setHorizontalGroup(
            pnlprsnldetailsLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(pnlprsnldetailsLayout.createSequentialGroup()
                .addContainerGap()
                .add(pnlprsnldetailsLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING, false)
                    .add(lblogender, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 158, Short.MAX_VALUE)
                    .add(org.jdesktop.layout.GroupLayout.LEADING, lblphone, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(org.jdesktop.layout.GroupLayout.LEADING, lblfullname, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(pnlprsnldetailsLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(txtclass1, 0, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(txtstream1, 0, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        pnlprsnldetailsLayout.setVerticalGroup(
            pnlprsnldetailsLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(pnlprsnldetailsLayout.createSequentialGroup()
                .add(pnlprsnldetailsLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                    .add(lblfullname, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 31, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(pnlprsnldetailsLayout.createSequentialGroup()
                        .add(6, 6, 6)
                        .add(txtclass1)))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(pnlprsnldetailsLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(lblogender, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 30, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(txtstream1))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(lblphone, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 26, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(37, Short.MAX_VALUE))
        );

        pnlotherdetails.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        lblhome.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        lblhome.setText("Examination Type");

        lblemail.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        lblemail.setText("Examination Number");

        lblhome1.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        lblhome1.setText("Term");

        txtterm1.setBackground(new java.awt.Color(255, 255, 204));
        txtterm1.setEditable(true);
        txtterm1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { " ", "1", "2", "3" }));

        txtetype1.setBackground(new java.awt.Color(255, 255, 204));
        txtetype1.setEditable(true);
        txtetype1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { " ", "Opener Exam", "Midterm Exam", "Endterm Exam" }));
        txtetype1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtetype1ActionPerformed(evt);
            }
        });

        txtsearch.setBackground(new java.awt.Color(255, 255, 204));
        txtsearch.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        txtsearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtsearchActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout pnlotherdetailsLayout = new org.jdesktop.layout.GroupLayout(pnlotherdetails);
        pnlotherdetails.setLayout(pnlotherdetailsLayout);
        pnlotherdetailsLayout.setHorizontalGroup(
            pnlotherdetailsLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(pnlotherdetailsLayout.createSequentialGroup()
                .add(pnlotherdetailsLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(lblemail)
                    .add(lblhome, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 122, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(lblhome1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 122, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(18, 18, 18)
                .add(pnlotherdetailsLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(txtterm1, 0, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(txtetype1, 0, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(txtsearch)))
        );
        pnlotherdetailsLayout.setVerticalGroup(
            pnlotherdetailsLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(pnlotherdetailsLayout.createSequentialGroup()
                .add(pnlotherdetailsLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(lblhome1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 27, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(pnlotherdetailsLayout.createSequentialGroup()
                        .add(4, 4, 4)
                        .add(txtterm1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 25, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(pnlotherdetailsLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(lblhome, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 27, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(txtetype1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(pnlotherdetailsLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(lblemail, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 28, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(txtsearch, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 27, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(35, Short.MAX_VALUE))
        );

        tbpreports.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        tbpreports.setEnabled(false);

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/g_highschoolmanagement_client/1372441198_Preview.png"))); // NOI18N
        jButton1.setText("Preview Marksheet Using Exam Number Parameter ");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        btnmarksheetp.setIcon(new javax.swing.ImageIcon(getClass().getResource("/g_highschoolmanagement_client/1372441198_Preview.png"))); // NOI18N
        btnmarksheetp.setText("Preview Marksheet For the Class");
        btnmarksheetp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnmarksheetpActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jPanel1Layout = new org.jdesktop.layout.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                    .add(jButton1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .add(btnmarksheetp, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .add(35, 35, 35)
                .add(jButton1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 37, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(18, 18, 18)
                .add(btnmarksheetp, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 37, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        tbpreports.addTab("Marksheets", jPanel1);

        lblemail1.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        lblemail1.setText("Admission Number");

        txtadmno.setBackground(new java.awt.Color(255, 255, 204));
        txtadmno.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));

        btnpreview.setIcon(new javax.swing.ImageIcon(getClass().getResource("/g_highschoolmanagement_client/1372441198_Preview.png"))); // NOI18N
        btnpreview.setText("Preview Student's Report Form");
        btnpreview.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnpreviewActionPerformed(evt);
            }
        });

        btnmarksheetp1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/g_highschoolmanagement_client/1372441198_Preview.png"))); // NOI18N
        btnmarksheetp1.setText("Preview Report Forms For the Class");
        btnmarksheetp1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnmarksheetp1ActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jPanel2Layout = new org.jdesktop.layout.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .add(lblemail1)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(txtadmno, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 115, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(266, 266, 266))
            .add(jPanel2Layout.createSequentialGroup()
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                    .add(btnmarksheetp1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .add(btnpreview, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .add(0, 0, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(lblemail1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 28, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(txtadmno, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 27, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(btnpreview, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 37, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(18, 18, 18)
                .add(btnmarksheetp1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 37, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(22, 22, 22))
        );

        tbpreports.addTab("Report Forms", jPanel2);

        btnpreviewanalysis.setIcon(new javax.swing.ImageIcon(getClass().getResource("/g_highschoolmanagement_client/1372441198_Preview.png"))); // NOI18N
        btnpreviewanalysis.setText("Preview Analysis Using Exam Number Parameter");
        btnpreviewanalysis.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnpreviewanalysisActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jPanel3Layout = new org.jdesktop.layout.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .add(btnpreviewanalysis, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 332, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(143, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel3Layout.createSequentialGroup()
                .add(37, 37, 37)
                .add(btnpreviewanalysis, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 31, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(89, Short.MAX_VALUE))
        );

        tbpreports.addTab("Exam Analysis", jPanel3);

        org.jdesktop.layout.GroupLayout pnlmainLayout = new org.jdesktop.layout.GroupLayout(pnlmain);
        pnlmain.setLayout(pnlmainLayout);
        pnlmainLayout.setHorizontalGroup(
            pnlmainLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, pnlmainLayout.createSequentialGroup()
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(pnlprsnldetails, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(pnlotherdetails, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
            .add(pnlmainLayout.createSequentialGroup()
                .add(tbpreports, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 494, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(0, 0, Short.MAX_VALUE))
        );
        pnlmainLayout.setVerticalGroup(
            pnlmainLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(pnlmainLayout.createSequentialGroup()
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(pnlmainLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(pnlprsnldetails, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(pnlotherdetails, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(tbpreports, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 189, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(244, 244, 244))
        );

        btnsearch.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        btnsearch.setIcon(new javax.swing.ImageIcon(getClass().getResource("/g_highschoolmanagement_client/1372438975_Search.png"))); // NOI18N
        btnsearch.setText("Find Exam");
        btnsearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnsearchActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(225, 225, 225)
                .add(lbldetails, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 335, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(101, 101, 101)
                .add(btnsearch, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(pnlmain, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(lbldetails, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 53, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(btnsearch))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(pnlmain, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 362, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(23, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
         public String dbusername="root";
 public  String dbhostip;
 public  String dbpassword;
public String database;  
    public  void dblogincred(){
           try {
            StringBuilder sb = new StringBuilder(File.separator);
            sb.append("C:\\Users\\Public\\Documents\\dblogin.txt");
            File f = new File(sb.toString());
            boolean isCreated = f.createNewFile();
            System.out.println(isCreated);
        } catch (IOException ex) {
            Logger.getLogger(dbsetup.class.getName()).log(Level.SEVERE, null, ex);
        }
        String fileName = "C:\\Users\\Public\\Documents\\dblogin.txt";

        try {
            // Use this for reading the data.
            String[] login=new String[10];
            byte[] buffer = new byte[1000];

            FileInputStream inputStream = 
                new FileInputStream(fileName);

            int total = 0;
            int nRead = 0;
            while((nRead = inputStream.read(buffer)) != -1) {
               
             login[total]= (new String(buffer));
                total += nRead;
                
            }
            if(login[1]!=null){
            dbpassword=login[1].trim();
            }
             if(login[0]!=null){
            dbhostip=login[0].trim();
            }
               inputStream.close();
               if(dbhostip.isEmpty()==false){
               int l=dbhostip.indexOf("n");
               int e=dbhostip.indexOf("%");
               
        dbpassword=dbhostip.substring(l+1,e).trim();
        database=dbhostip.substring(e+1).trim();
        dbhostip=dbhostip.substring(0, l).trim();
         System.out.println(""+dbhostip);
         System.out.println(""+database);
         System.out.println(""+dbpassword);
               }
          
        }
        catch(FileNotFoundException ex) {
            System.out.println(
                "Unable to open file '" + 
                fileName + "'");
      
        }
        catch(IOException ex) {
            System.out.println(
                "Error reading file '" 
                + fileName + "'");					
            
        }
         
    }
  
    
    
 

 

 
    private void btnsearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnsearchActionPerformed
        // TODO add your handling code here:
        try{
        String examno = txtsearch.getText();

      Class.forName("com.mysql.jdbc.Driver");
      Connection con = DriverManager.getConnection("jdbc:mysql://"+dbhostip+":3306/"+database, dbusername, dbpassword);

      Statement st = con.createStatement();

      String sql = "Select * from exam, score where score.examno=exam.examno and exam.examno = ?";

      PreparedStatement pstmnt = con.prepareStatement(sql);
      pstmnt.setString(1, examno);
      ResultSet rs = pstmnt.executeQuery();
      if(rs.next()){
        JOptionPane.showMessageDialog(rootPane, "Record Found");
        tbpreports.setEnabled(true);
     
      }
      else{
     //       JOptionPane.showMessageDialog(rootPane, "Record not found please try again");
      tbpreports.setEnabled(true);
   
      }
  
    

    

    
    }
    catch (SQLException ex) {
        ex.printStackTrace();
      } catch (ClassNotFoundException ex) {
        Logger.getLogger(examreports.class.getName()).log(Level.SEVERE, null, ex);
    }
  
        
        
        
    }//GEN-LAST:event_btnsearchActionPerformed

    private void txtclass1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtclass1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtclass1ActionPerformed

    private void txtetype1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtetype1ActionPerformed
        // TODO add your handling code here:
         String type=(String) txtetype1.getSelectedItem();
        String clas=(String) txtclass1.getSelectedItem();
        String stream=(String) txtstream1.getSelectedItem();
         String term=(String) txtterm1.getSelectedItem();
        int year=txtyear1.getYear();
         
         txtsearch.setText(""+type+"-"+clas+"-"+stream+"-"+term+"-"+year);
    }//GEN-LAST:event_txtetype1ActionPerformed

    private void txtyear1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtyear1MouseEntered
        // TODO add your handling code here:
              String type=(String) txtetype1.getSelectedItem();
        String clas=(String) txtclass1.getSelectedItem();
        String stream=(String) txtstream1.getSelectedItem();
         String term=(String) txtterm1.getSelectedItem();
        int year=txtyear1.getYear();
         
         txtsearch.setText(""+type+"-"+clas+"-"+stream+"-"+term+"-"+year);
     
    }//GEN-LAST:event_txtyear1MouseEntered

    private void txtyear1VetoableChange(java.beans.PropertyChangeEvent evt)throws java.beans.PropertyVetoException {//GEN-FIRST:event_txtyear1VetoableChange
        // TODO add your handling code here:.
             String type=(String) txtetype1.getSelectedItem();
        String clas=(String) txtclass1.getSelectedItem();
        String stream=(String) txtstream1.getSelectedItem();
         String term=(String) txtterm1.getSelectedItem();
        int year=txtyear1.getYear();
         
         txtsearch.setText(""+type+"-"+clas+"-"+stream+"-"+term+"-"+year);
    }//GEN-LAST:event_txtyear1VetoableChange

    private void txtyear1PropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_txtyear1PropertyChange
        // TODO add your handling code here:
              String type=(String) txtetype1.getSelectedItem();
        String clas=(String) txtclass1.getSelectedItem();
        String stream=(String) txtstream1.getSelectedItem();
         String term=(String) txtterm1.getSelectedItem();
        int year=txtyear1.getYear();
         
         txtsearch.setText(""+type+"-"+clas+"-"+stream+"-"+term+"-"+year);
    }//GEN-LAST:event_txtyear1PropertyChange

    private void btnpreviewanalysisActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnpreviewanalysisActionPerformed
        // TODO add your handling code here:
       anlyse();
        
    }//GEN-LAST:event_btnpreviewanalysisActionPerformed

    private void btnpreviewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnpreviewActionPerformed
        // TODO add your handling code here:
    views();
    }//GEN-LAST:event_btnpreviewActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        if(tbpreports.isEnabled()){
        views3();
        }
        else{
            JOptionPane.showMessageDialog(rootPane,"Please find exam to see if record exists before you can proceed");
        }
      
               
    }//GEN-LAST:event_jButton1ActionPerformed

    private void btnmarksheetpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnmarksheetpActionPerformed
        // TODO add your handling code here:
         if(tbpreports.isEnabled()){
        
        views4();
         }
         else{
            JOptionPane.showMessageDialog(rootPane,"Please find exam to see if record exists before you can proceed");
        }
      
    }//GEN-LAST:event_btnmarksheetpActionPerformed

    private void btnmarksheetp1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnmarksheetp1ActionPerformed
        // TODO add your handling code here:
        views2();
        
        
    }//GEN-LAST:event_btnmarksheetp1ActionPerformed

    private void txtsearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtsearchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtsearchActionPerformed
      public void views() {
    try {
      String ex = txtsearch.getText();
      int ad = Integer.parseInt(this.txtadmno.getText());
      try
      {
          Class.forName("com.mysql.jdbc.Driver");
   
        Connection con = DriverManager.getConnection("jdbc:mysql://"+dbhostip+":3306/"+database, dbusername, dbpassword);
        
        Map parameters = new HashMap();
        parameters.put("Admission", ad);
        parameters.put("Examno", ex);
        JasperReport report = (JasperReport)JRLoader.loadObject(getClass().getResource("markshet.jasper"));
        JasperPrint jasperPrint = JasperFillManager.fillReport(report, parameters, con);
        JFrame frame = new JFrame("Student Report Card");
        frame.getContentPane().add(new JRViewer(jasperPrint));
         frame.setVisible(true);
            frame.setExtendedState(JFrame.MAXIMIZED_BOTH);
     
      } catch (SQLException e) {
          e.printStackTrace();
            JOptionPane.showMessageDialog(rootPane, "Report cannot be displayed \n Error:"+e.getMessage());

      } catch (JRException ed) {
          ed.printStackTrace();
            JOptionPane.showMessageDialog(rootPane, "Report cannot be displayed \n Error:"+ed.getMessage());

      }
    } catch (Exception exr) {
        exr.printStackTrace();
      JOptionPane.showMessageDialog(rootPane, "Report cannot be displayed \n Error:"+exr.getMessage());
    }
  }
       public void views2() {
    try {
      try
      {
           int ex = Integer.parseInt((String)this.txtclass1.getSelectedItem());
      int ad = this.txtyear1.getYear();
      int tr = Integer.parseInt((String)this.txtterm1.getSelectedItem());
      String type = (String)txtetype1.getSelectedItem();
          Class.forName("com.mysql.jdbc.Driver");
   
        Connection con =  DriverManager.getConnection("jdbc:mysql://"+dbhostip+":3306/"+database, dbusername, dbpassword);
        Map parameters = new HashMap();
        parameters.put("class",(ex));
        parameters.put("year", (ad));
        parameters.put("Term", (tr));
        parameters.put("Type", type);
        JasperReport report = (JasperReport)JRLoader.loadObject(getClass().getResource("markshet2.jasper"));
        JasperPrint jasperPrint = JasperFillManager.fillReport(report, parameters, con);
        JFrame frame = new JFrame("Student Report Card");
        frame.getContentPane().add(new JRViewer(jasperPrint));
        frame.setVisible(true);
       frame.setExtendedState(JFrame.MAXIMIZED_BOTH);
        
      } catch (SQLException e) {
          e.printStackTrace();
       JOptionPane.showMessageDialog(rootPane, "Report cannot be displayed \n Error:"+e.getMessage());

          
      } catch (JRException ed) {
          ed.printStackTrace();
                    JOptionPane.showMessageDialog(rootPane, "Report cannot be displayed \n Error:"+ed.getMessage());

      }
    } catch (Exception exr) {
        exr.printStackTrace();
            JOptionPane.showMessageDialog(rootPane, "Report cannot be displayed \n Error:"+exr.getMessage());
    }
  }
  public void views3() {
    try { String ex =txtsearch.getText();
      try
      {
          Class.forName("com.mysql.jdbc.Driver");
   
        Connection con =  DriverManager.getConnection("jdbc:mysql://"+dbhostip+":3306/"+database, dbusername, dbpassword);
        Map parameters = new HashMap();
        parameters.put("Examno", ex);

        JasperReport report = (JasperReport)JRLoader.loadObject(getClass().getResource("markshet_3.jasper"));
        JasperPrint jasperPrint = JasperFillManager.fillReport(report, parameters, con);
        JFrame frame = new JFrame("Examination Reports");
        
        frame.getContentPane().add(new JRViewer(jasperPrint));
         
        frame.setVisible(true);
         frame.setExtendedState(JFrame.MAXIMIZED_BOTH);
       
      } catch (SQLException e) {
          e.printStackTrace();
                    JOptionPane.showMessageDialog(rootPane, "Report cannot be displayed \n Error:"+e.getMessage());

          
      } catch (JRException ed) {
          ed.printStackTrace();
                    JOptionPane.showMessageDialog(rootPane, "Report cannot be displayed \n Error:"+ed.getMessage());

      }
    } catch (Exception exr) {
        exr.printStackTrace();
           JOptionPane.showMessageDialog(rootPane, "Report cannot be displayed \n Error:"+exr.getMessage());
    }
  }

  public void views4() {
    try { int ex = Integer.parseInt((String)this.txtclass1.getSelectedItem());
      int ad = this.txtyear1.getYear();
      int tr = Integer.parseInt((String)this.txtterm1.getSelectedItem());
      String type = (String)txtetype1.getSelectedItem();
      try
      {
          Class.forName("com.mysql.jdbc.Driver");
   
        Connection con =  DriverManager.getConnection("jdbc:mysql://"+dbhostip+":3306/"+database, dbusername, dbpassword);
        Map parameters = new HashMap();
        parameters.put("Year", (ad));
        parameters.put("Class", (ex));
        parameters.put("Term", (tr));
        parameters.put("Type", (type));

        JasperReport report = (JasperReport)JRLoader.loadObject(getClass().getResource("markshet22.jasper"));
        JasperPrint jasperPrint = JasperFillManager.fillReport(report, parameters, con);
        JFrame frame = new JFrame("Examination Reports");
        frame.getContentPane().add(new JRViewer(jasperPrint));
         frame.setVisible(true);
         frame.setExtendedState(JFrame.MAXIMIZED_BOTH);
      
         
      } catch (SQLException e) {
          e.printStackTrace();
                    JOptionPane.showMessageDialog(rootPane, "Report cannot be displayed \n Error:"+e.getMessage());

      } catch (JRException ed) {
          ed.printStackTrace();
                    JOptionPane.showMessageDialog(rootPane, "Report cannot be displayed \n Error:"+ed.getMessage());

      }
    } catch (Exception exr) {
        exr.printStackTrace();
              JOptionPane.showMessageDialog(rootPane, "Report cannot be displayed \n Error:"+exr.getMessage());
    }
  }
  public void anlyse(){
      
     try { 
      String ex = this.txtsearch.getText();
      Class.forName("com.mysql.jdbc.Driver");
   
         Connection con = DriverManager.getConnection("jdbc:mysql://"+dbhostip+":3306/"+database, dbusername, dbpassword);
     
      
      String s1,s2,s3,s4,s5,s6,s7,s8,s9,s10,s11,s12,s13,s14,s15,s16,s17,s18,s19,s20,s21,s22,s23,s24,
          s25,s26,s27,s28,s29,s30,s31,s32,s33,s34,s35,s36,s37,s38,s39,s40,s41,s44,s45,s46,s47,s48,
        s49,s50,s51,s52,s53,s54,s55,s56,s57,s58,s59,s60,s61,s62,s63,s64,s65,s66,s67,s68,s69,s70,s71,s72,
          s73,s74,s75,s76,s77,s78,s79,s80,s81,s82,s83,s84,s85,s86,s87,s88,s89,s90,s91,s92,s93,s94,
        s95,s96,s97,s98,s99,s100,s101,s102,s103,s104,s105,s106,s107,s108,s109,s110,s111,s112,s113,s114,s115,s116,s118,s119,
          s120,s121,s122,s123,s124,s126,s127,s128,s129,s130,s131,s132,s133,s134,s135 = null,s136,s137,s138,s139,s140,s141,s142,
        s143,s144;
      s1="SELECT COUNT(grade) as col FROM grade WHERE grade='A' AND EXAMNO="+"'"+ex+"'";
      s2="SELECT COUNT(grade) as col1 FROM grade WHERE grade='A-' AND EXAMNO="+"'"+ex+"'";
      s3="SELECT COUNT(grade) as col2 FROM grade WHERE grade='B+' AND EXAMNO="+"'"+ex+"'";
      s4="SELECT COUNT(grade) as col3 FROM grade WHERE grade='B' AND EXAMNO="+"'"+ex+"'";
      s5="SELECT COUNT(grade)as col4 FROM grade WHERE grade='B-' AND EXAMNO="+"'"+ex+"'";
      s6="SELECT COUNT(grade)as col5 FROM grade WHERE grade='C+' AND EXAMNO="+"'"+ex+"'";
      s7="SELECT COUNT(grade) as col6 FROM grade WHERE grade='C' AND EXAMNO="+"'"+ex+"'";
      s8="SELECT COUNT(grade) as cl FROM grade WHERE grade='C-' AND EXAMNO="+"'"+ex+"'";
      s9="SELECT COUNT(grade) as col8 FROM grade WHERE grade='D+' AND EXAMNO="+"'"+ex+"'";
      s10="SELECT COUNT(grade) as col9 FROM grade WHERE grade='D' AND EXAMNO="+"'"+ex+"'";
      s11="SELECT COUNT(grade) as col10 FROM grade WHERE grade='D-' AND EXAMNO="+"'"+ex+"'";
      s12="SELECT COUNT(grade) as col11 FROM grade WHERE grade='E' AND EXAMNO="+"'"+ex+"'";
      s13="SELECT COUNT(grade1) as col12 FROM grade WHERE grade1='A' AND EXAMNO="+"'"+ex+"'";
      s14="SELECT COUNT(grade1) as col13 FROM grade WHERE grade1='A-' AND EXAMNO="+"'"+ex+"'";
      s15="SELECT COUNT(grade1) as col14 FROM grade WHERE grade1='B+' AND EXAMNO="+"'"+ex+"'";
      s16="SELECT COUNT(grade1) as col15 FROM grade WHERE grade1='B' AND EXAMNO="+"'"+ex+"'";
      s17="SELECT COUNT(grade1) as col16  FROM grade WHERE grade1='B-' AND EXAMNO="+"'"+ex+"'";
      s18="SELECT COUNT(grade1) as col17 FROM grade WHERE grade1='C+' AND EXAMNO="+"'"+ex+"'";
      s19="SELECT COUNT(grade1) as col18 FROM grade WHERE grade1='C' AND EXAMNO="+"'"+ex+"'";
      s20="SELECT COUNT(grade1) as col19 FROM grade WHERE grade1='C-' AND EXAMNO="+"'"+ex+"'";
      s21="SELECT COUNT(grade1) as col20 FROM grade WHERE grade1='D+' AND EXAMNO="+"'"+ex+"'";
      s22="SELECT COUNT(grade1) as col21 FROM grade WHERE grade1='D' AND EXAMNO="+"'"+ex+"'";
      s23="SELECT COUNT(grade1) as col22 FROM grade WHERE grade1='D-' AND EXAMNO="+"'"+ex+"'";
      s24="SELECT COUNT(grade1) as col23 FROM grade WHERE grade1='E' AND EXAMNO="+"'"+ex+"'";
            s25="SELECT COUNT(grade2) as col24 FROM grade WHERE grade2='A' AND EXAMNO="+"'"+ex+"'";
      s26="SELECT COUNT(grade2) as col25 FROM grade WHERE grade2='A-' AND EXAMNO="+"'"+ex+"'";
      s27="SELECT COUNT(grade2) as col26 FROM grade WHERE grade2='B+' AND EXAMNO="+"'"+ex+"'";
      s28="SELECT COUNT(grade2)as col27 FROM grade WHERE grade2='B' AND EXAMNO="+"'"+ex+"'";
      s29="SELECT COUNT(grade2)as col28 FROM grade WHERE grade2='B-' AND EXAMNO="+"'"+ex+"'";
      s30="SELECT COUNT(grade2)as col29 FROM grade WHERE grade2='C+' AND EXAMNO="+"'"+ex+"'";
      s31="SELECT COUNT(grade2)as col30 FROM grade WHERE grade2='C' AND EXAMNO="+"'"+ex+"'";
      s32="SELECT COUNT(grade2)as col31 FROM grade WHERE grade2='C-' AND EXAMNO="+"'"+ex+"'";
      s33="SELECT COUNT(grade2)as col32 FROM grade WHERE grade2='D+' AND EXAMNO="+"'"+ex+"'";
      s34="SELECT COUNT(grade2)as col33 FROM grade WHERE grade2='D' AND EXAMNO="+"'"+ex+"'";
      s35="SELECT COUNT(grade2)as col34 FROM grade WHERE grade2='D-' AND EXAMNO="+"'"+ex+"'";
      s36="SELECT COUNT(grade2)as col35 FROM grade WHERE grade2='E' AND EXAMNO="+"'"+ex+"'";
      s37="SELECT COUNT(grade3)as col36 FROM grade WHERE grade3='A' AND EXAMNO="+"'"+ex+"'";
      s38="SELECT COUNT(grade3) as col37 FROM grade WHERE grade3='A-' AND EXAMNO="+"'"+ex+"'";
      s39="SELECT COUNT(grade3)as col38 FROM grade WHERE grade3='B+' AND EXAMNO="+"'"+ex+"'";
      s40="SELECT COUNT(grade3)as col39 FROM grade WHERE grade3='B' AND EXAMNO="+"'"+ex+"'";
      s41="SELECT COUNT(grade3) as col40 FROM grade WHERE grade3='B-' AND EXAMNO="+"'"+ex+"'";
     String  s42="SELECT COUNT(grade3) as col41  FROM grade WHERE grade3='C+' AND EXAMNO="+"'"+ex+"'";
 String      s43="SELECT COUNT(grade3) as col42 FROM grade WHERE grade3='C' AND EXAMNO="+"'"+ex+"'";
      s44="SELECT COUNT(grade3) as col43  FROM grade WHERE grade3='C-' AND EXAMNO="+"'"+ex+"'";
      s45="SELECT COUNT(grade3) as col44 FROM grade WHERE grade3='D+' AND EXAMNO="+"'"+ex+"'";
      s46="SELECT COUNT(grade3) as col45 FROM grade WHERE grade3='D' AND EXAMNO="+"'"+ex+"'";
      s47="SELECT COUNT(grade3) as col46  FROM grade WHERE grade3='D-' AND EXAMNO="+"'"+ex+"'";
      s48="SELECT COUNT(grade3)  as col47 FROM grade WHERE grade3='E' AND EXAMNO="+"'"+ex+"'";
            s49="SELECT COUNT(grade4) as col48 FROM grade WHERE grade4='A' AND EXAMNO="+"'"+ex+"'";
      s50="SELECT COUNT(grade4) as col49 FROM grade WHERE grade4='A-' AND EXAMNO="+"'"+ex+"'";
      s51="SELECT COUNT(grade4) as col50 FROM grade WHERE grade4='B+' AND EXAMNO="+"'"+ex+"'";
      s52="SELECT COUNT(grade4)as col51 FROM grade WHERE grade4='B' AND EXAMNO="+"'"+ex+"'";
      s53="SELECT COUNT(grade4) as col52 FROM grade WHERE grade4='B-' AND EXAMNO="+"'"+ex+"'";
      s54="SELECT COUNT(grade4) as col53 FROM grade WHERE grade4='C+' AND EXAMNO="+"'"+ex+"'";
      s55="SELECT COUNT(grade4)as col54 FROM grade WHERE grade4='C' AND EXAMNO="+"'"+ex+"'";
      s56="SELECT COUNT(grade4) as col55 FROM grade WHERE grade4='C-' AND EXAMNO="+"'"+ex+"'";
      s57="SELECT COUNT(grade4) as col56 FROM grade WHERE grade4='D+' AND EXAMNO="+"'"+ex+"'";
      s58="SELECT COUNT(grade4) as col57 FROM grade WHERE grade4='D' AND EXAMNO="+"'"+ex+"'";
      s59="SELECT COUNT(grade4) as col58 FROM grade WHERE grade4='D-' AND EXAMNO="+"'"+ex+"'";
      s60="SELECT COUNT(grade4) as col59 FROM grade WHERE grade4='E' AND EXAMNO="+"'"+ex+"'";
            s61="SELECT COUNT(grade5) as col60 FROM grade WHERE grade5='A' AND EXAMNO="+"'"+ex+"'";
      s62="SELECT COUNT(grade5)  as col61 FROM grade WHERE grade5='A-' AND EXAMNO="+"'"+ex+"'";
      s63="SELECT COUNT(grade5) as col62 FROM grade WHERE grade5='B+' AND EXAMNO="+"'"+ex+"'";
      s64="SELECT COUNT(grade5)as col63 FROM grade WHERE grade5='B' AND EXAMNO="+"'"+ex+"'";
      s65="SELECT COUNT(grade5) as col64 FROM grade WHERE grade5='B-' AND EXAMNO="+"'"+ex+"'";
      s66="SELECT COUNT(grade5)  as col65 FROM grade WHERE grade5='C+' AND EXAMNO="+"'"+ex+"'";
      s67="SELECT COUNT(grade5) as col66 FROM grade WHERE grade5='C' AND EXAMNO="+"'"+ex+"'";
      s68="SELECT COUNT(grade5) as col67 FROM grade WHERE grade5='C-' AND EXAMNO="+"'"+ex+"'";
      s69="SELECT COUNT(grade5) as col68 FROM grade WHERE grade5='D+' AND EXAMNO="+"'"+ex+"'";
      s70="SELECT COUNT(grade5) as col69 FROM grade WHERE grade5='D' AND EXAMNO="+"'"+ex+"'";
      s71="SELECT COUNT(grade5) as col70 FROM grade WHERE grade5='D-' AND EXAMNO="+"'"+ex+"'";
      s72="SELECT COUNT(grade5) as col71 FROM grade WHERE grade5='E' AND EXAMNO="+"'"+ex+"'";
            s73="SELECT COUNT(grade6) as col72 FROM grade WHERE grade6='A' AND EXAMNO="+"'"+ex+"'";
      s74="SELECT COUNT(grade6) as col73 FROM grade WHERE grade6='A-' AND EXAMNO="+"'"+ex+"'";
      s75="SELECT COUNT(grade6) as col74 FROM grade WHERE grade6='B+' AND EXAMNO="+"'"+ex+"'";
      s76="SELECT COUNT(grade6) as col75 FROM grade WHERE grade6='B' AND EXAMNO="+"'"+ex+"'";
      s77="SELECT COUNT(grade6) as col76 FROM grade WHERE grade6='B-' AND EXAMNO="+"'"+ex+"'";
      s78="SELECT COUNT(grade6) as col77 FROM grade WHERE grade6='C+' AND EXAMNO="+"'"+ex+"'";
      s79="SELECT COUNT(grade6) as col78 FROM grade WHERE grade6='C' AND EXAMNO="+"'"+ex+"'";
      s80="SELECT COUNT(grade6) as col79 FROM grade WHERE grade6='C-' AND EXAMNO="+"'"+ex+"'";
      s81="SELECT COUNT(grade6) as col80 FROM grade WHERE grade6='D+' AND EXAMNO="+"'"+ex+"'";
      s82="SELECT COUNT(grade6) as col81 FROM grade WHERE grade6='D' AND EXAMNO="+"'"+ex+"'";
      s83="SELECT COUNT(grade6) as col82 FROM grade WHERE grade6='D-' AND EXAMNO="+"'"+ex+"'";
      s84="SELECT COUNT(grade6) as col83 FROM grade WHERE grade6='E' AND EXAMNO="+"'"+ex+"'";
            s85="SELECT COUNT(grade7) as col84 FROM grade WHERE grade7='A' AND EXAMNO="+"'"+ex+"'";
      s86="SELECT COUNT(grade7) as col85 FROM grade WHERE grade7='A-' AND EXAMNO="+"'"+ex+"'";
      s87="SELECT COUNT(grade7)as col86  FROM grade WHERE grade7='B+' AND EXAMNO="+"'"+ex+"'";
      s88="SELECT COUNT(grade7) as col87 FROM grade WHERE grade7='B' AND EXAMNO="+"'"+ex+"'";
      s89="SELECT COUNT(grade7) as col88 FROM grade WHERE grade7='B-' AND EXAMNO="+"'"+ex+"'";
      s90="SELECT COUNT(grade7) as col89 FROM grade WHERE grade7='C+' AND EXAMNO="+"'"+ex+"'";
      s91="SELECT COUNT(grade7) as col90 FROM grade WHERE grade7='C' AND EXAMNO="+"'"+ex+"'";
      s92="SELECT COUNT(grade7) as col91 FROM grade WHERE grade7='C-' AND EXAMNO="+"'"+ex+"'";
      s93="SELECT COUNT(grade7) as col92 FROM grade WHERE grade7='D+' AND EXAMNO="+"'"+ex+"'";
      s94="SELECT COUNT(grade7) as col93 FROM grade WHERE grade7='D' AND EXAMNO="+"'"+ex+"'";
      s95="SELECT COUNT(grade7) as col94 FROM grade WHERE grade7='D-' AND EXAMNO="+"'"+ex+"'";
      s96="SELECT COUNT(grade7)  as col95 FROM grade WHERE grade7='E' AND EXAMNO="+"'"+ex+"'";
            s97="SELECT COUNT(grade8) as col96 FROM grade WHERE grade8='A' AND EXAMNO="+"'"+ex+"'";
      s98="SELECT COUNT(grade8) as col97 FROM grade WHERE grade8='A-' AND EXAMNO="+"'"+ex+"'";
      s99="SELECT COUNT(grade8) as col98 FROM grade WHERE grade8='B+' AND EXAMNO="+"'"+ex+"'";
      s100="SELECT COUNT(grade8) as col99 FROM grade WHERE grade8='B' AND EXAMNO="+"'"+ex+"'";
      s101="SELECT COUNT(grade8) as col100  FROM grade WHERE grade8='B-' AND EXAMNO="+"'"+ex+"'";
      s102="SELECT COUNT(grade8) as col101 FROM grade WHERE grade8='C+' AND EXAMNO="+"'"+ex+"'";
      s103="SELECT COUNT(grade8) as col102 FROM grade WHERE grade8='C' AND EXAMNO="+"'"+ex+"'";
      s104="SELECT COUNT(grade8) as col103 FROM grade WHERE grade8='C-' AND EXAMNO="+"'"+ex+"'";
      s105="SELECT COUNT(grade8) as col104 FROM grade WHERE grade8='D+' AND EXAMNO="+"'"+ex+"'";
      s106="SELECT COUNT(grade8) as col105 FROM grade WHERE grade8='D' AND EXAMNO="+"'"+ex+"'";
      s107="SELECT COUNT(grade8)  as col106 FROM grade WHERE grade8='D-' AND EXAMNO="+"'"+ex+"'";
      s108="SELECT COUNT(grade8) as col107 FROM grade WHERE grade8='E' AND EXAMNO="+"'"+ex+"'";
            s109="SELECT COUNT(grade9) as col108 FROM grade WHERE grade9='A' AND EXAMNO="+"'"+ex+"'";
      s110="SELECT COUNT(grade9) as col109 FROM grade WHERE grade9='A-' AND EXAMNO="+"'"+ex+"'";
      s111="SELECT COUNT(grade9) as col110 FROM grade WHERE grade9='B+' AND EXAMNO="+"'"+ex+"'";
      s112="SELECT COUNT(grade9) as col111 FROM grade WHERE grade9='B' AND EXAMNO="+"'"+ex+"'";
      s113="SELECT COUNT(grade9) as col112 FROM grade WHERE grade9='B-' AND EXAMNO="+"'"+ex+"'";
      s114="SELECT COUNT(grade9) as col113 FROM grade WHERE grade9='C+' AND EXAMNO="+"'"+ex+"'";
      s115="SELECT COUNT(grade9) as col114 FROM grade WHERE grade9='C' AND EXAMNO="+"'"+ex+"'";
      s116="SELECT COUNT(grade9) as col115 FROM grade WHERE grade9='C-' AND EXAMNO="+"'"+ex+"'";
         String s117 = "SELECT COUNT(grade9) as col116 FROM grade WHERE grade9='D+' AND EXAMNO="+"'"+ex+"'";
      s118="SELECT COUNT(grade9) as col117 FROM grade WHERE grade9='D' AND EXAMNO="+"'"+ex+"'";
      s119="SELECT COUNT(grade9) as col118 FROM grade WHERE grade9='D-' AND EXAMNO="+"'"+ex+"'";
      s120="SELECT COUNT(grade9) as col119 FROM grade WHERE grade9='E' AND EXAMNO="+"'"+ex+"'";
            s121="SELECT COUNT(grade10) as col120 FROM grade WHERE grade10='A' AND EXAMNO="+"'"+ex+"'";
      s122="SELECT COUNT(grade10) as col121 FROM grade WHERE grade10='A-' AND EXAMNO="+"'"+ex+"'";
      s123="SELECT COUNT(grade10) as col122 FROM grade WHERE grade10='B+' AND EXAMNO="+"'"+ex+"'";
      s124="SELECT COUNT(grade10)  as col123 FROM grade WHERE grade10='B' AND EXAMNO="+"'"+ex+"'";
      String s125="SELECT COUNT(grade10) as col124 FROM grade WHERE grade10='B-' AND EXAMNO="+"'"+ex+"'";
      s126="SELECT COUNT(grade10) as col125 FROM grade WHERE grade10='C+' AND EXAMNO="+"'"+ex+"'";
      s127="SELECT COUNT(grade10) as col126 FROM grade WHERE grade10='C' AND EXAMNO="+"'"+ex+"'";
      s128="SELECT COUNT(grade10) as col127 FROM grade WHERE grade10='C-' AND EXAMNO="+"'"+ex+"'";
      s129="SELECT COUNT(grade10) as col128 FROM grade WHERE grade10='D+' AND EXAMNO="+"'"+ex+"'";
      s130="SELECT COUNT(grade10) as col129 FROM grade WHERE grade10='D' AND EXAMNO="+"'"+ex+"'";
      s131="SELECT COUNT(grade10) as col130 FROM grade WHERE grade10='D-' AND EXAMNO="+"'"+ex+"'";
      s132="SELECT COUNT(grade10) as col131 FROM grade WHERE grade10='E' AND EXAMNO="+"'"+ex+"'";
         s133="SELECT COUNT(grade11) as col132 FROM grade WHERE grade11='A' AND EXAMNO="+"'"+ex+"'";
      s134="SELECT COUNT(grade11)  as col133 FROM grade WHERE grade11='A-' AND EXAMNO="+"'"+ex+"'";
      s135="SELECT COUNT(grade11)as col134 FROM grade WHERE grade11='B+' AND EXAMNO="+"'"+ex+"'";
      s136="SELECT COUNT(grade11) as col135 FROM grade WHERE grade11='B' AND EXAMNO="+"'"+ex+"'";
      s137="SELECT COUNT(grade11) as col136 FROM grade WHERE grade11='B-' AND EXAMNO="+"'"+ex+"'";
      s138="SELECT COUNT(grade11) as col137 FROM grade WHERE grade11='C+' AND EXAMNO="+"'"+ex+"'";
      s139="SELECT COUNT(grade11) as col138 FROM grade WHERE grade11='C' AND EXAMNO="+"'"+ex+"'";
      s140="SELECT COUNT(grade11) as col139 FROM grade WHERE grade11='C-' AND EXAMNO="+"'"+ex+"'";
      s141="SELECT COUNT(grade11) as col140 FROM grade WHERE grade11='D+' AND EXAMNO="+"'"+ex+"'";
      s142="SELECT COUNT(grade11) as col141 FROM grade WHERE grade11='D' AND EXAMNO="+"'"+ex+"'";
      s143="SELECT COUNT(grade11) as col142 FROM grade WHERE grade11='D-' AND EXAMNO="+"'"+ex+"'";
      s144="SELECT COUNT(grade11) as col143 FROM grade WHERE grade11='E' AND EXAMNO="+"'"+ex+"'";
     
       Statement r12 = con.createStatement();
       ResultSet rs12;Statement r13 = con.createStatement();
       ResultSet rs13;Statement r14 = con.createStatement();
       ResultSet rs14;Statement r15 = con.createStatement();
       ResultSet rs15;Statement r16 = con.createStatement();
       ResultSet rs16;Statement r17 = con.createStatement();
       ResultSet rs17;Statement r18 = con.createStatement();
       ResultSet rs18;Statement r19 = con.createStatement();
       ResultSet rs19;Statement r20 = con.createStatement();
       ResultSet rs20;Statement r21 = con.createStatement();
       ResultSet rs21;Statement r22 = con.createStatement();
       ResultSet rs22;Statement r23 = con.createStatement();
       ResultSet rs23;Statement r24 = con.createStatement();
       ResultSet rs24;Statement r25 = con.createStatement();
       ResultSet rs25;Statement r26 = con.createStatement();
       ResultSet rs26;Statement r28 = con.createStatement();
       ResultSet rs27;Statement r27 = con.createStatement();
       ResultSet rs28;Statement r29 = con.createStatement();
       ResultSet rs29;Statement r30 = con.createStatement();
       ResultSet rs30;Statement r31 = con.createStatement();
       ResultSet rs31;Statement r32 = con.createStatement();
       ResultSet rs32;Statement r33 = con.createStatement();
       ResultSet rs33;Statement r34 = con.createStatement();
       ResultSet rs34;Statement r35 = con.createStatement();
       ResultSet rs35;Statement r36 = con.createStatement();
       ResultSet rs37;Statement r37 = con.createStatement();
       ResultSet rs36;Statement r38 = con.createStatement();
       Statement r39 = con.createStatement();
       ResultSet rs38;Statement r40 = con.createStatement();
       ResultSet rs39;Statement r41 = con.createStatement();
       ResultSet rs40;Statement r42 = con.createStatement();
       ResultSet rs41;Statement r43 = con.createStatement();
       ResultSet rs42;Statement r44 = con.createStatement();
       ResultSet rs43;Statement r45 = con.createStatement();
       ResultSet rs44;Statement r46 = con.createStatement();
       ResultSet rs45;Statement r47 = con.createStatement();
       ResultSet rs46;Statement r48 = con.createStatement();
       ResultSet rs47;Statement r49 = con.createStatement();
       ResultSet rs48;Statement r50 = con.createStatement();
       ResultSet rs49;
       ResultSet rs50;Statement r51 = con.createStatement();
       ResultSet rs51;Statement r52 = con.createStatement();
       ResultSet rs52;Statement r53 = con.createStatement();
       ResultSet rs53;Statement r54 = con.createStatement();
       ResultSet rs54;Statement r55 = con.createStatement();
       ResultSet rs55;Statement r56 = con.createStatement();
       ResultSet rs56;Statement r57 = con.createStatement();
       ResultSet rs57;Statement r58 = con.createStatement();
       ResultSet rs58;Statement r59 = con.createStatement();
       ResultSet rs59;Statement r60 = con.createStatement();
       ResultSet rs60;Statement r61 = con.createStatement();
       ResultSet rs61;Statement r62 = con.createStatement();
       ResultSet rs62;Statement r63 = con.createStatement();
       ResultSet rs63;Statement r64 = con.createStatement();
       ResultSet rs64;Statement r65 = con.createStatement();
       ResultSet rs65;Statement r66 = con.createStatement();
       ResultSet rs66;Statement r67 = con.createStatement();
       ResultSet rs67;Statement r68 = con.createStatement();
       ResultSet rs68;Statement r69 = con.createStatement();
       ResultSet rs69;Statement r70 = con.createStatement();
       ResultSet rs70;Statement r71 = con.createStatement();
       ResultSet rs71;Statement r72 = con.createStatement();
       ResultSet rs72;Statement r73 = con.createStatement();
       ResultSet rs73;Statement r74 = con.createStatement();
       ResultSet rs74;Statement r75 = con.createStatement();
       ResultSet rs75;Statement r76 = con.createStatement();
       ResultSet rs76;Statement r77 = con.createStatement();
       ResultSet rs77;Statement r78 = con.createStatement();
       ResultSet rs78;Statement r79 = con.createStatement();
       ResultSet rs79;Statement r80 = con.createStatement();
       ResultSet rs80;Statement r81 = con.createStatement();
       ResultSet rs81;Statement r82 = con.createStatement();
       ResultSet rs82;Statement r83 = con.createStatement();
       ResultSet rs83;Statement r84 = con.createStatement();
       ResultSet rs84;Statement r85 = con.createStatement();
       ResultSet rs85;Statement r86 = con.createStatement();
       ResultSet rs86;Statement r87 = con.createStatement();
       ResultSet rs87;Statement r88 = con.createStatement();
       ResultSet rs88;Statement r89 = con.createStatement();
       ResultSet rs89;Statement r90 = con.createStatement();
       ResultSet rs90;Statement r91 = con.createStatement();
       ResultSet rs91;Statement r92 = con.createStatement();
       ResultSet rs92;Statement r93 = con.createStatement();
       ResultSet rs93;Statement r94 = con.createStatement();
       ResultSet rs94;Statement r95 = con.createStatement();
       ResultSet rs95;Statement r96 = con.createStatement();
       ResultSet rs96;Statement r97 = con.createStatement();
       ResultSet rs97;Statement r98 = con.createStatement();
       ResultSet rs98;Statement r99 = con.createStatement();
       ResultSet rs99;Statement r100 = con.createStatement();
       ResultSet rs100;Statement r101 = con.createStatement();
       ResultSet rs101;Statement r102 = con.createStatement();
       ResultSet rs102;Statement r103 = con.createStatement();
       ResultSet rs103;Statement r104 = con.createStatement();
       ResultSet rs104;Statement r105 = con.createStatement();
       ResultSet rs105;Statement r106 = con.createStatement();
       ResultSet rs106;Statement r107 = con.createStatement();
       ResultSet rs107;Statement r108 = con.createStatement();
       ResultSet rs108;Statement r109 = con.createStatement();
       ResultSet rs109;Statement r110 = con.createStatement();
       ResultSet rs110;Statement r111 = con.createStatement();
       ResultSet rs111;Statement r112 = con.createStatement();
       ResultSet rs112;Statement r113 = con.createStatement();
       ResultSet rs113;Statement r114 = con.createStatement();
       ResultSet rs114;Statement r115 = con.createStatement();
       ResultSet rs115;Statement r116 = con.createStatement();
       ResultSet rs116;Statement r117 = con.createStatement();
       ResultSet rs117;Statement r118 = con.createStatement();
       ResultSet rs118;Statement r119 = con.createStatement();
       ResultSet rs119;Statement r120 = con.createStatement();
       ResultSet rs120;Statement r121 = con.createStatement();
       ResultSet rs121;Statement r122 = con.createStatement();
       ResultSet rs122;Statement r123 = con.createStatement();
       ResultSet rs123;Statement r124 = con.createStatement();
       ResultSet rs124;Statement r125 = con.createStatement();
       ResultSet rs125;Statement r126 = con.createStatement();
       ResultSet rs126;Statement r127 = con.createStatement();
       ResultSet rs127;Statement r128 = con.createStatement();
       ResultSet rs128;Statement r129 = con.createStatement();
       ResultSet rs129;Statement r130 = con.createStatement();
       ResultSet rs130;Statement r131 = con.createStatement();
       ResultSet rs131;Statement r132 = con.createStatement();
       ResultSet rs132;Statement r133 = con.createStatement();
       ResultSet rs133;Statement r134 = con.createStatement();
       ResultSet rs134;Statement r135 = con.createStatement();
       ResultSet rs135;Statement r136 = con.createStatement();
       ResultSet rs136;Statement r137 = con.createStatement();
       ResultSet rs137;Statement r138 = con.createStatement();
       ResultSet rs138;Statement r139 = con.createStatement();
       ResultSet rs139;Statement r140 = con.createStatement();
       ResultSet rs140;Statement r141 = con.createStatement();
       ResultSet rs141;Statement r142 = con.createStatement();
       ResultSet rs142;Statement r143 = con.createStatement();
       ResultSet rs143;Statement r144 = con.createStatement();
         
    

      int p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12,p13,p14,p15,p16,p17,p18,p19,p20,p21,p22,p23,p24,
          p25,p26,p27,p28,p29,p30,p31,p32,p33,p34,p35,p36,p37,p38,p39,p40,p41,p44,p45,p46,p47,p48,
        p49,p50,p51,p52,p53,p54,p55,p56,p57,p58,p59,p60,p61,p62,p63,p64,p65,p66,p67,p68,p69,p70,p71,p72,
          p73,p74,p75,p76,p77,p78,p79,p80,p81,p82,p83,p84,p85,p86,p87,p88,p89,p90,p91,p92,p93,p94,
        p95,p96,p97,p98,p99,p100,p101,p102,p103,p104,p105,p106,p107,p108,p109,p110,p111,p112,p113,p114,p115,p116,p118,p119,
          p120,p121,p122,p123,p124,p126,p127,p128,p129,p130,p131,p132,p133,p134,p135,p136,p137,p138,p139,p140,p141,p142,
        p143,p144;
              float v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12;
       Statement r = con.createStatement();
       ResultSet rs = r.executeQuery(s1);
       rs.next();
       p1=rs.getInt("col");
       
       Statement r0 = con.createStatement();
       ResultSet rs0 = r0.executeQuery(s2);
       rs0 = r0.executeQuery(s2);
       rs0.next();
       p2=rs0.getInt("col1");
       
       Statement r1 = con.createStatement();
       ResultSet rs1 = r1.executeQuery(s3);
       rs1 = r1.executeQuery(s3);
       rs1.next();
       p3=rs1.getInt("col2");
       
       Statement r2 = con.createStatement();
       ResultSet rs2 = r2.executeQuery(s4);
       rs2 = r2.executeQuery(s4);
       rs2.next();
       p4=rs2.getInt("col3");
       
       Statement r3 = con.createStatement();
       ResultSet rs3 = r3.executeQuery(s5);
       rs3 = r3.executeQuery(s5);
       rs3.next();
       p5=rs3.getInt("col4");
     
       
       Statement r4 = con.createStatement();
       ResultSet rs4 = r4.executeQuery(s6);
       rs4.next();
       p6=rs4.getInt("col5");
    
       
       Statement r5 = con.createStatement();
       ResultSet rs5 = r5.executeQuery(s7);
       rs5.next();
       p7=rs5.getInt("col6");
       
       Statement r6 = con.createStatement();
       ResultSet rs6 = r6.executeQuery(s8);
       rs6 = r6.executeQuery(s8);
       rs6.next();
       p8=rs6.getInt("cl");
       
       Statement r7 = con.createStatement();
       ResultSet rs7 = r7.executeQuery(s9);
       rs7.next();
       p9=rs7.getInt("col8");
       
       Statement r8 = con.createStatement();
       ResultSet rs8 = r8.executeQuery(s10);
       rs8.next();
       p10=rs8.getInt("col9");
        
       Statement r9 = con.createStatement();
       ResultSet rs9;
       rs9 = r9.executeQuery(s11);
       rs9.next();
       p11=rs9.getInt("col10");
       
       Statement r10 = con.createStatement();
       ResultSet rs10;
      
       rs10 = r10.executeQuery(s12);
       rs10.next();
       p12=rs10.getInt("col11");
       
       
       Statement r11 = con.createStatement();
       ResultSet rs11;
      
       rs11 = r11.executeQuery(s13);
       rs11.next();
       p13=rs11.getInt("col12");
       
       
       rs12 = r12.executeQuery(s14);
       rs12.next();
       p14=rs12.getInt("col13");
       
       rs13 = r13.executeQuery(s15);
       rs13.next();
       p15=rs13.getInt("col14");
       
        rs14 = r14.executeQuery(s16);
        rs14.next();
        p16=rs14.getInt("col15");
       
        rs15 = r15.executeQuery(s17);
        rs15.next();
        p17=rs15.getInt("col16");
        
        rs16 = r16.executeQuery(s18);
        rs16.next();
        p18=rs16.getInt("col17");
        
        rs17 = r17.executeQuery(s19);
        rs17.next();
        p19=rs17.getInt("col18");
        
        rs18 = r18.executeQuery(s20);
        rs18.next();
        p20=rs18.getInt("col19");
        
        rs19 = r19.executeQuery(s21);
        rs19.next();
        p21=rs19.getInt("col20");
        
        rs20 = r20.executeQuery(s22);
        rs20.next();
        p22=rs20.getInt("col21");
        
        rs21 = r21.executeQuery(s23);
        rs21.next();
        p23=rs21.getInt("col22");
        
        rs22 = r22.executeQuery(s24);
        rs22.next();
        p24=rs22.getInt("col23");
      
        rs23 = r23.executeQuery(s25);
        rs23.next();
        p25=rs23.getInt("col24");
       
       rs24 = r24.executeQuery(s26);
       rs24.next();
       p26=rs24.getInt("col25");
       
       rs25 = r25.executeQuery(s27);
       rs25.next();
       p27=rs25.getInt("col26");
       
       rs26 = r26.executeQuery(s28);
       rs26.next();
       p28=rs26.getInt("col27");
       
       rs27 = r27.executeQuery(s29);
       rs27.next();
       p29=rs27.getInt("col28");
       
       rs28 = r28.executeQuery(s30);
       rs28.next();
       p30=rs28.getInt("col29");
       
       rs29 = r29.executeQuery(s31);
       rs29.next();
       p31=rs29.getInt("col30");
       
       rs30 = r30.executeQuery(s32);
       rs30.next();
       p32=rs30.getInt("col31");
       
       rs31 = r31.executeQuery(s33);
       rs31.next();
       p33=rs31.getInt("col32");
       
       rs32 = r32.executeQuery(s34);
       rs32.next();
       p34=rs32.getInt("col33");
       
       rs34 = r33.executeQuery(s35);
       rs34.next();
       p35=rs34.getInt("col34");
       
       rs35 = r34.executeQuery(s36);
       rs35.next();
       p36=rs35.getInt("col35");
      
       rs36 = r35.executeQuery(s37);
       rs36.next();
       p37=rs36.getInt("col36");
       
       rs37 = r36.executeQuery(s38);
       rs37.next();
       p38=rs37.getInt("col37");
       
       rs38 = r37.executeQuery(s39);
       rs38.next();
       p39=rs38.getInt("col38");
       
       rs39 = r38.executeQuery(s40);
       rs39.next();
       p40=rs39.getInt("col39");
        
       rs40 = r39.executeQuery(s41);
       rs40.next();
       p41=rs40.getInt("col40");
       
       rs41 = r40.executeQuery(s42);
       rs41.next();
       int       p42=rs41.getInt("col41");
       
       rs42 = r41.executeQuery(s43);
       rs42.next();
       int p43=rs42.getInt("col42");
       
       rs43 = r42.executeQuery(s44);
       rs43.next();
       p44=rs43.getInt("col43");
       
       rs44 = r43.executeQuery(s45);
       rs44.next();
       p45=rs44.getInt("col44");
       
       rs45 = r44.executeQuery(s46);
       rs45.next();
       p46=rs45.getInt("col45");
       
       rs46 = r45.executeQuery(s47);
       rs46.next();
       p47=rs46.getInt("col46");
       
       rs47 = r46.executeQuery(s48);
       rs47.next();
       p48=rs47.getInt("col47");
      
       
       rs48 = r47.executeQuery(s49);
       rs48.next();
       p49=rs48.getInt("col48");
       
       rs49 = r48.executeQuery(s50);
       rs49.next();
       p50=rs49.getInt("col49");
       
       rs50 = r49.executeQuery(s51);
       rs50.next();
       p51=rs50.getInt("col50");
       
       
       rs51 = r50.executeQuery(s52);
       rs51.next();
       p52=rs51.getInt("col51");
       
       rs52 = r51.executeQuery(s53);
       rs52.next();
       p53=rs52.getInt("col52");
       
       rs53 = r52.executeQuery(s54);
       rs53.next();
       p54=rs53.getInt("col53");
       
       rs54 = r53.executeQuery(s55);
       rs54.next();
       p55=rs54.getInt("col54");
       
       rs55 = r54.executeQuery(s56);
       rs55.next();
       p56=rs55.getInt("col55");
       
       rs56 = r55.executeQuery(s57);
       rs56.next();
       p57=rs56.getInt("col56");
       
       rs57 = r56.executeQuery(s58);
       rs57.next();
       p58=rs57.getInt("col57");
       
       rs58 = r57.executeQuery(s59);
       rs58.next();
       p59=rs58.getInt("col58");
        
       rs59 = r58.executeQuery(s60);
       rs59.next();
       p60=rs59.getInt("col59");
      
       rs60 = r59.executeQuery(s61);
       rs60.next();
       p61=rs60.getInt("col60");
       
       rs61 = r60.executeQuery(s62);
       rs61.next();
       p62=rs61.getInt("col61");
       
       rs62 = r61.executeQuery(s63);
       rs62.next();
       p63=rs62.getInt("col62");
       
       rs63 = r62.executeQuery(s64);
       rs63.next();
       p64=rs63.getInt("col63");
       
       rs64 = r63.executeQuery(s65);
       rs64.next();
       p65=rs64.getInt("col64");
       
       rs65 = r64.executeQuery(s66);
       rs65.next();
       p66=rs65.getInt("col65");
       
       rs66 = r65.executeQuery(s67);
       rs66.next();
       p67=rs66.getInt("col66");
       
       rs67 = r66.executeQuery(s68);
       rs67.next();
       p68=rs67.getInt("col67");
       
       rs68 = r67.executeQuery(s69);
       rs68.next();
       p69=rs68.getInt("col68");
       
       rs69 = r68.executeQuery(s70);
       rs69.next();
       p70=rs69.getInt("col69");
       
       rs70 = r69.executeQuery(s71);
       rs70.next();
       p71=rs70.getInt("col70");
       
       rs71 = r70.executeQuery(s72);
       rs71.next();
       p72=rs71.getInt("col71");
      
       rs72 = r71.executeQuery(s73);
       rs72.next();
       p73=rs72.getInt("col72");
       
       rs73 = r72.executeQuery(s74);
       rs73.next();
       p74=rs73.getInt("col73");
       
       rs74 = r73.executeQuery(s75);
       rs74.next();
       p75=rs74.getInt("col74");
       
       rs75 = r74.executeQuery(s76);
       rs75.next();
       p76=rs75.getInt("col75");
       
       rs76 = r75.executeQuery(s77);
       rs76.next();
       p77=rs76.getInt("col76");
       
       rs77 = r76.executeQuery(s78);
       rs77.next();
       p78=rs77.getInt("col77");
       
       rs78 = r77.executeQuery(s79);
       rs78.next();
       p79=rs78.getInt("col78");
       
       rs79 = r78.executeQuery(s80);
       rs79.next();
       p80=rs79.getInt("col79");
       
       rs80 = r79.executeQuery(s81);
       rs80.next();
       p81=rs80.getInt("col80");
       
       rs81 = r80.executeQuery(s82);
       rs81.next();
       p82=rs81.getInt("col81");
       
       rs82 = r81.executeQuery(s83);
       rs82.next();
       p83=rs82.getInt("col82");
       
       rs83 = r82.executeQuery(s84);
       rs83.next();
       p84=rs83.getInt("col83");
      
              
       rs84 = r83.executeQuery(s85);
       rs84.next();
       p85=rs84.getInt("col84");
       
       rs85 = r84.executeQuery(s86);
       rs85.next();
       p86=rs85.getInt("col85");
       
       rs86 = r85.executeQuery(s87);
       rs86.next();
       p87=rs86.getInt("col86");
       
       rs87 = r86.executeQuery(s88);
       rs87.next();
       p88=rs87.getInt("col87");
       
       rs88 = r87.executeQuery(s89);
       rs88.next();
       p89=rs88.getInt("col88");
       
       rs89 = r88.executeQuery(s90);
       rs89.next();
       p90=rs89.getInt("col89");
       
       rs90= r89.executeQuery(s91);
       rs90.next();
       p91=rs90.getInt("col90");
       
       rs91 = r90.executeQuery(s92);
       rs91.next();
       p92=rs91.getInt("col91");
       
       rs92 = r91.executeQuery(s93);
       rs92.next();
       p93=rs92.getInt("col92");
       
       rs93 = r92.executeQuery(s94);
       rs93.next();
       p94=rs93.getInt("col93");
       
       rs94 = r93.executeQuery(s95);
       rs94.next();
       p95=rs94.getInt("col94");
       
       rs95 = r94.executeQuery(s96);
       rs95.next();
       p96=rs95.getInt("col95");
      
       rs96 = r95.executeQuery(s97);
       rs96.next();
       p97=rs96.getInt("col96");
       
       rs97 = r96.executeQuery(s98);
       rs97.next();
       p98=rs97.getInt("col97");
       
       rs98 = r97.executeQuery(s99);
       rs98.next();
       p99=rs98.getInt("col98");
       
       rs99 = r98.executeQuery(s100);
       rs99.next();
       p100=rs99.getInt("col99");
       
       rs100 = r99.executeQuery(s101);
       rs100.next();
       p101=rs100.getInt("col100");
       
       rs101 = r100.executeQuery(s102);
       rs101.next();
       p102=rs101.getInt("col101");
       
       rs102 = r101.executeQuery(s103);
       rs102.next();
       p103=rs102.getInt("col102");
       
       rs103 = r101.executeQuery(s104);
       rs103.next();
       p104=rs103.getInt("col103");
       
       rs104 = r102.executeQuery(s105);
       rs104.next();
       p105=rs104.getInt("col104");
       
       rs105 = r103.executeQuery(s106);
       rs105.next();
       p106=rs105.getInt("col105");
       
       rs106 = r104.executeQuery(s107);
       rs106.next();
       p107=rs106.getInt("col106");
       
       rs107 = r105.executeQuery(s108);
       rs107.next();
       p108=rs107.getInt("col107");
      
       rs108 = r106.executeQuery(s109);
       rs108.next();
       p109=rs108.getInt("col108");
       
       rs109 = r107.executeQuery(s110);
       rs109.next();
       p110=rs109.getInt("col109");
       
       rs110 = r108.executeQuery(s111);
       rs110.next();
       p111=rs110.getInt("col110");
       
       
       rs111 = r109.executeQuery(s112);
       rs111.next();
       p112=rs111.getInt("col111");
       
       
       rs112 = r110.executeQuery(s113);
       rs112.next();
       p113=rs112.getInt("col112");
       
       rs113 = r111.executeQuery(s114);
       rs113.next();
       p114=rs113.getInt("col113");
       
       rs114 = r112.executeQuery(s115);
       rs114.next();
       p115=rs114.getInt("col114");
        
       rs115 = r113.executeQuery(s116);
       rs115.next();
       p116=rs115.getInt("col115");
       
       rs116 = r114.executeQuery(s117);
       rs116.next();
int       p117=rs116.getInt("col116");

       rs117 = r115.executeQuery(s118);
       rs117.next();
       p118=rs117.getInt("col117");
       
       rs118 = r116.executeQuery(s119);
       rs118.next();
       p119=rs118.getInt("col118");
       
       rs119 = r117.executeQuery(s120);
       rs119.next();
       p120=rs119.getInt("col119");
      
       rs120 = r118.executeQuery(s121);
       rs120.next();
       p121=rs120.getInt("col120");
       
       rs121 = r119.executeQuery(s122);
       rs121.next();
       p122=rs121.getInt("col121");
       
       rs122 = r120.executeQuery(s123);
       rs122.next();
       p123=rs122.getInt("col122");
       
       rs123 = r121.executeQuery(s124);
       rs123.next();
       p124=rs123.getInt("col123");
       
       rs124 = r122.executeQuery(s125);
       rs124.next();
int       p125=rs124.getInt("col124");

       rs125 = r123.executeQuery(s126);
       rs125.next();
       p126=rs125.getInt("col125");
     
       rs126 = r124.executeQuery(s127);
       rs126.next();
       p127=rs126.getInt("col126");
       
       rs127 = r125.executeQuery(s128);
       rs127.next();
       p128=rs127.getInt("col127");
       
       rs128 = r126.executeQuery(s129);
       rs128.next();
       p129=rs128.getInt("col128");
       
       rs129 = r127.executeQuery(s130);
       rs129.next();
       p130=rs129.getInt("col129");
       
       rs130 = r128.executeQuery(s131);
       rs130.next();
       p131=rs130.getInt("col130");
       
       rs131 = r129.executeQuery(s132);
       rs131.next();
       p132=rs131.getInt("col131");
      
       rs132 = r130.executeQuery(s133);
       rs132.next();
       p133=rs132.getInt("col132");
       
       rs133 = r131.executeQuery(s134);
       rs133.next();
       p134=rs133.getInt("col133");
       
       rs134 = r132.executeQuery(s135);
       rs134.next();
       p135=rs134.getInt("col134");
       
       rs135 = r133.executeQuery(s136);
       rs135.next();
       p136=rs135.getInt("col135");
       
       rs136 = r134.executeQuery(s137);
       rs136.next();
       p137=rs136.getInt("col136");
       
       rs137 = r135.executeQuery(s138);
       rs137.next();
       p138=rs137.getInt("col137");
       
       rs138 = r136.executeQuery(s139);
       rs138.next();
       p139=rs138.getInt("col138");
       
       rs139 = r137.executeQuery(s140);
       rs139.next();
       p140=rs139.getInt("col139");
       
       rs140 = r138.executeQuery(s141);
       rs140.next();
       p141=rs140.getInt("col140");
       
       rs141 = r139.executeQuery(s142);
       rs141.next();
       p142=rs141.getInt("col141");
       
       rs142 = r140.executeQuery(s143);
       rs142.next();
       p143=rs142.getInt("col142");
       
       rs143 = r141.executeQuery(s144);
       rs143.next();
       p144=rs143.getInt("col143");
      
       v1=((p1*12+p2*11+p3*10+p4*9+p5*8+p6*7+p7*6+p8*5+p9*4+p10*3+p11*2+p12*1)/(p1+p2+p3+p4+p5+p6+p7+p8+p9+p10+p11+p12));
       v2=((p13*12+p14*11+p15*10+p16*9+p17*8+p18*7+p19*6+p20*5+p21*4+p22*3+p23*2+p24*1)/(p13+p14+p15+p16+p17+p18+p19+p20+p21+p22+p23+p24));
       v3=((p25*12+p26*11+p3*27+p28*9+p29*8+p30*7+p31*6+p32*5+p33*4+p34*3+p35*2+p36*1)/(p25+p26+p27+p28+p29+p30+p31+p32+p33+p34+p35+p36));
       v4=((p37*12+p38*11+p39*10+p40*9+p41*8+p42*7+p43*6+p44*5+p45*4+p46*3+p47*2+p48*1)/(p37+p38+p39+p40+p41+p42+p43+p44+p45+p46+p47+p48));
       
       v5=((p49*12+p50*11+p51*10+p52*9+p53*8+p54*7+p55*6+p56*5+p57*4+p58*3+p59*2+p60*1)/(p49+p50+p51+p52+p53+p54+p55+p56+p57+p58+p59+p60));
       v6=((p61*12+p62*11+p63*10+p64*9+p65*8+p66*7+p67*6+p68*5+p69*4+p70*3+p71*2+p72*1)/(p61+p62+p63+p64+p65+p66+p67+p68+p69+p70+p71+p72));
       v7=((p73*12+p74*11+p75*10+p76*9+p77*8+p78*7+p79*6+p80*5+p81*4+p82*3+p83*2+p84*1)/(p81+p82+p83+p84+p73+p74+p75+p76+p77+p78+p79+p80));
       v8=((p85*12+p86*11+p87*10+p88*9+p89*8+p90*7+p91*6+p92*5+p93*4+p94*3+p95*2+p96*1)/(p85+p86+p87+p88+p89+p90+p91+p92+p93+p94+p95+p96));
       v9=((p97*12+p98*11+p99*10+p100*9+p101*8+p102*7+p103*6+p104*5+p105*4+p106*3+p107*2+p108*1)/(p97+p98+p99+p100+p101+p102+p103+p104+p105+p106+p107+p108));
       v10=((p109*12+p110*11+p111*10+p112*9+p113*8+p114*7+p115*6+p116*5+p117*4+p118*3+p119*2+p120*1)/(p109+p110+p111+p112+p113+p114+p115+p116+p117+p118+p119+p120));
       v11=((p121*12+p122*11+p123*10+p124*9+p125*8+p126*7+p127*6+p128*5+p129*4+p130*3+p131*2+p132*1)/(p121+p122+p123+p124+p125+p126+p127+p128+p129+p130+p131+p132));
       v12=((p133*12+p134*11+p135*10+p136*9+p137*8+p138*7+p139*6+p140*5+p141*4+p142*3+p143*2+p144*1)/(p133+p134+p135+p136+p137+p138+p139+p140+p144+p141+p142+p143));
       
       
       
      int v25=((p1+p2+p3+p4+p5+p6+p7+p8+p9+p10+p11+p12));
      int v26=((p13+p14+p15+p16+p17+p18+p19+p20+p21+p22+p23+p24));
       int v27=((p25+p26+p27+p28+p29+p30+p31+p32+p33+p34+p35+p36));
    int   v28=((p37+p38+p39+p40+p41+p42+p43+p44+p45+p46+p47+p48));
       
    int   v29=((p49+p50+p51+p52+p53+p54+p55+p56+p57+p58+p59+p60));
     int  v30=((p61+p62+p63+p64+p65+p66+p67+p68+p69+p70+p71+p72));
    int   v31=((p81+p82+p83+p84+p73+p74+p75+p76+p77+p78+p79+p80));
    int   v32=((p85+p86+p87+p88+p89+p90+p91+p92+p93+p94+p95+p96));
    int   v33=((p97+p98+p99+p100+p101+p102+p103+p104+p105+p106+p107+p108));
    int   v34=((p109+p110+p111+p112+p113+p114+p115+p116+p117+p118+p119+p120));
   int    v35=((p121+p122+p123+p124+p125+p126+p127+p128+p129+p130+p131+p132));
    int   v36=((p133+p134+p135+p136+p137+p138+p139+p140+p144+p141+p142+p143));
       System.err.println(""+p1+""+p2+""+p3+""+p4+""+p5+""+p6+""+p7+""+p8+""+p9+""+p10+""+p11+""+p12+""+p13+""+p14+""+p15+""+p16+""+p17+""+p18+""+p19+""+p20+""+p21+""+p22+""+p23+""+p24+""+
          p25+""+p26+""+p27+""+p28+""+p29+""+p30+""+p31+""+p32+""+p33+""+p34+""+p35+""+p36+""+p37+""+p38+""+p39+""+p40+""+p41+""+p44+""+p45+""+p46+""+p47+""+p48+""+
        p49+""+p50+""+p51+""+p52+""+p53+""+p54+""+p55+""+p56+""+p57+""+p58+""+p59+""+p60+""+p61+""+p62+""+p63+""+p64+""+p65+""+p66+""+p67+""+p68+""+p69+""+p70+""+p71+""+p72+""+
          p73+""+p74+""+p75+""+p76+""+p77+""+p78+""+p79+""+p80+""+p81+""+p82+""+p83+""+p84+""+p85+""+p86+""+p87+""+p88+""+p89+""+p90+""+p91+""+p92+""+p93+""+p94+""+
        p95+""+p96+""+p97+""+p98+""+p99+""+p100+""+p101+""+p102+""+p103+""+p104+""+p105+""+p106+""+p107+""+p108+""+p109+""+p110+""+p111+""+p112+""+p113+""+p114+""+p115+""+p116+""+p118+""+p119+""+
          p120+""+p121+""+p122+""+p123+""+p124+""+p126+""+p127+""+p128+""+p129+""+p130+""+p131+""+p132+""+p133+""+p134+""+p135+""+p136+""+p137+""+p138+""+p139+""+p140+""+p141+""+p142+""+
        p143+""+p144+""+ v1+""+v2+""+v3+""+v4+""+v5+""+v6+""+v7+""+v8+""+v9+""+v10+""+v11+""+v12);
      
      
      
     
        Map parameters = new HashMap();
       
       parameters.put("Examno",(ex));
       parameters.put("p1",(p1));
       parameters.put("p2",(p2));
       parameters.put("p3",(p3));
       parameters.put("p4",(p4));
       parameters.put("p5",(p5));
       parameters.put("p6",(p6));
       parameters.put("p7",(p7));
       parameters.put("p8",(p8));
       parameters.put("p9",(p9));
       parameters.put("p10",(p10));
        parameters.put("Examno",(ex));
       parameters.put("p11",(p11));
       parameters.put("p12",(p12));
       parameters.put("p13",(p13));
       parameters.put("p14",(p14));
       parameters.put("p15",(p15));
       parameters.put("p16",(p16));
       parameters.put("p17",(p17));
       parameters.put("p18",(p18));
       parameters.put("p19",(p19));
       parameters.put("p20",(p20));
        parameters.put("Examno",(ex));
       parameters.put("p21",(p21));
       parameters.put("p22",(p22));
       parameters.put("p23",(p23));
       parameters.put("p24",(p24));
       parameters.put("p25",(p25));
       parameters.put("p26",(p26));
       parameters.put("p27",(p27));
       parameters.put("p28",(p28));
       parameters.put("p29",(p29));
       parameters.put("p30",(p30));
        parameters.put("Examno",(ex));
       parameters.put("p31",(p31));
       parameters.put("p32",(p32));
       parameters.put("p33",(p33));
       parameters.put("p34",(p34));
       parameters.put("p35",(p35));
       parameters.put("p36",(p36));
       parameters.put("p37",(p37));
       parameters.put("p38",(p38));
       parameters.put("p39",(p39));
       parameters.put("p40",(p40));
        parameters.put("Examno",(ex));
       parameters.put("p41",(p51));
       parameters.put("p42",(p52));
       parameters.put("p43",(p53));
       parameters.put("p44",(p54));
       parameters.put("p45",(p55));
       parameters.put("p46",(p56));
       parameters.put("p47",(p57));
       parameters.put("p48",(p58));
       parameters.put("p49",(p59));
       parameters.put("p50",(p50));
        parameters.put("Examno",(ex));
       parameters.put("p51",(p51));
       parameters.put("p52",(p52));
       parameters.put("p53",(p53));
       parameters.put("p54",(p54));
       parameters.put("p55",(p55));
       parameters.put("p56",(p56));
       parameters.put("p57",(p57));
       parameters.put("p58",(p58));
       parameters.put("p59",(p59));
       parameters.put("p60",(p60));
        parameters.put("Examno",(ex));
       parameters.put("p61",(p61));
       parameters.put("p62",(p62));
       parameters.put("p63",(p63));
       parameters.put("p64",(p64));
       parameters.put("p65",(p65));
       parameters.put("p66",(p66));
       parameters.put("p67",(p67));
       parameters.put("p68",(p68));
       parameters.put("p69",(p69));
       parameters.put("p70",(p70));
        parameters.put("Examno",(ex));
       parameters.put("p71",(p71));
       parameters.put("p72",(p72));
       parameters.put("p73",(p73));
       parameters.put("p74",(p74));
       parameters.put("p75",(p75));
       parameters.put("p76",(p76));
       parameters.put("p77",(p77));
       parameters.put("p78",(p78));
       parameters.put("p79",(p79));
       parameters.put("p80",(p80));
        parameters.put("Examno",(ex));
       parameters.put("p81",(p81));
       parameters.put("p82",(p82));
       parameters.put("p83",(p83));
       parameters.put("p84",(p84));
       parameters.put("p85",(p85));
       parameters.put("p86",(p86));
       parameters.put("p87",(p87));
       parameters.put("p88",(p88));
       parameters.put("p89",(p89));
       parameters.put("p90",(p90));
        parameters.put("Examno",(ex));
       parameters.put("p91",(p91));
       parameters.put("p92",(p92));
       parameters.put("p93",(p93));
       parameters.put("p94",(p94));
       parameters.put("p95",(p95));
       parameters.put("p96",(p96));
       parameters.put("p97",(p97));
       parameters.put("p98",(p98));
       parameters.put("p99",(p99));
       parameters.put("p100",(p100));
        parameters.put("Examno",(ex));
       parameters.put("p101",(p101));
       parameters.put("p102",(p102));
       parameters.put("p103",(p103));
       parameters.put("p104",(p104));
       parameters.put("p105",(p105));
       parameters.put("p106",(p106));
       parameters.put("p107",(p107));
       parameters.put("p108",(p108));
       parameters.put("p109",(p109));
       parameters.put("p110",(p110));
        parameters.put("Examno",(ex));
       parameters.put("p111",(p111));
       parameters.put("p112",(p112));
       parameters.put("p113",(p113));
       parameters.put("p114",(p114));
       parameters.put("p115",(p115));
       parameters.put("p116",(p116));
       parameters.put("p117",(p117));
       parameters.put("p118",(p118));
       parameters.put("p119",(p119));
       parameters.put("p120",(p120));
        parameters.put("Examno",(ex));
       parameters.put("p121",(p121));
       parameters.put("p122",(p122));
       parameters.put("p123",(p123));
       parameters.put("p124",(p124));
       parameters.put("p125",(p125));
       parameters.put("p126",(p126));
       parameters.put("p127",(p127));
       parameters.put("p128",(p128));
       parameters.put("p129",(p129));
       parameters.put("p130",(p130));
        parameters.put("Examno",(ex));
       parameters.put("p131",(p131));
       parameters.put("p132",(p132));
       parameters.put("p133",(p133));
       parameters.put("p134",(p134));
       parameters.put("p135",(p135));
       parameters.put("p136",(p136));
       parameters.put("p137",(p137));
       parameters.put("p138",(p138));
       parameters.put("p139",(p139));
       parameters.put("p140",(p140));
        parameters.put("Examno",(ex));
       parameters.put("p141",(p141));
       parameters.put("p142",(p142));
       parameters.put("p143",(p143));
       parameters.put("p144",(p144));
         parameters.put("v1",(v1));
       parameters.put("v2",(v2));
       parameters.put("v3",(v3));
       parameters.put("v4",(v4));
       parameters.put("v5",(v5));
       parameters.put("v6",(v6));
       parameters.put("v7",(v7));
       parameters.put("v8",(v8));
       parameters.put("v9",(v9));
       parameters.put("v10",(v10));
       parameters.put("v11",(v11));
       parameters.put("v12",(v12));
       parameters.put("v13",points(v1));
       parameters.put("v14",points(v2));
       parameters.put("v15",points(v3));
       parameters.put("v16",points(v4));
       parameters.put("v17",points(v5));
       parameters.put("v18",points(v6));
       parameters.put("v19",points(v7));
       parameters.put("v20",points(v8));
       parameters.put("v21",points(v9));
       parameters.put("v22",points(v10));
       parameters.put("v23",points(v11));
       parameters.put("v24",points(v12));
         parameters.put("v25",(v25));
       parameters.put("v26",(v26));
       parameters.put("v27",(v27));
       parameters.put("v28",(v28));
       parameters.put("v29",(v29));
       parameters.put("v30",(v30));
        parameters.put("v31",(v31));
       parameters.put("v32",(v32));
       parameters.put("v33",(v33));
       parameters.put("v34",(v34));
       parameters.put("v35",(v35));
       parameters.put("v36",(v36));
  
       
     
            

        JasperReport report = (JasperReport)JRLoader.loadObject(getClass().getResource("analyse.jasper"));
        JasperPrint jasperPrint = JasperFillManager.fillReport(report, parameters, con);
        JFrame frame = new JFrame("Exam Anlysis");
        frame.getContentPane().add(new JRViewer(jasperPrint));
         frame.setVisible(true);
         frame.setExtendedState(JFrame.MAXIMIZED_BOTH);
      
         
      } catch (SQLException e) {
          e.printStackTrace();
                    JOptionPane.showMessageDialog(rootPane, "Report cannot be displayed \n Error:"+e.getMessage());

      } catch (JRException ed) {
          ed.printStackTrace();
                    JOptionPane.showMessageDialog(rootPane, "Report cannot be displayed \n Error:"+ed.getMessage());

      } catch (ClassNotFoundException ex) {
        Logger.getLogger(examreports.class.getName()).log(Level.SEVERE, null, ex);
     }
    
      
      
  }
  
  
  
  
  
  
  
  
    public static String points(float mark)
  {
    if ((mark > 0) && (mark <= 1)) {
      return "E";
    }
    if ((mark > 0) && (mark <= 1))
      return "E";
    if ((mark > 1) && (mark <= 2))
      return "D-";
    if ((mark > 2) && (mark <= 3))
      return "D";
    if ((mark > 3) && (mark <= 4))
      return "D+";
    if ((mark > 4) && (mark <= 5))
      return "C-";
    if ((mark > 5) && (mark <= 6))
      return "C";
    if ((mark > 6) && (mark <= 7))
      return "C+";
    if ((mark > 7) && (mark <= 8))
      return "B-";
    if ((mark > 8) && (mark <= 9))
      return "B";
    if ((mark > 9) && (mark <= 10))
      return "B+";
    if ((mark > 10) && (mark <= 11))
      return "A-";
    if ((mark > 11) && (mark <= 12)) {
      return "A";
    }

    return "X"; } 
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnmarksheetp;
    private javax.swing.JButton btnmarksheetp1;
    private javax.swing.JButton btnpreview;
    private javax.swing.JButton btnpreviewanalysis;
    private javax.swing.JButton btnsearch;
    private javax.swing.JButton jButton1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JLabel lbldetails;
    private javax.swing.JLabel lblemail;
    private javax.swing.JLabel lblemail1;
    private javax.swing.JLabel lblfullname;
    private javax.swing.JLabel lblhome;
    private javax.swing.JLabel lblhome1;
    private javax.swing.JLabel lblogender;
    private javax.swing.JLabel lblphone;
    private javax.swing.JPanel pnlmain;
    private javax.swing.JPanel pnlotherdetails;
    private javax.swing.JPanel pnlprsnldetails;
    private javax.swing.JTabbedPane tbpreports;
    private javax.swing.JTextField txtadmno;
    private javax.swing.JComboBox txtclass1;
    private javax.swing.JComboBox txtetype1;
    private javax.swing.JTextField txtsearch;
    private javax.swing.JComboBox txtstream1;
    private javax.swing.JComboBox txtterm1;
    // End of variables declaration//GEN-END:variables
}
